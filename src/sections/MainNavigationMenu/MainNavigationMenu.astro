---
import { Image } from "astro:assets";
import Menu from "@lucide/astro/icons/menu";
import X from "@lucide/astro/icons/x";

import { Icon } from "astro-icon/components";

import type { Section } from "../../interfaces/section.interface";
import LinkDropdown from "./components/LinkDropdown.astro";
import { buildMenuTree } from "@/utils/buil-menu-tree";
import Link from "@/components/ui/Link.astro";

interface Props {
  section: Section;
}

const { section } = Astro.props;
---

<nav
  id="mainNavigationMenu"
  class="px-4 py-3 w-full bg-primary flex items-center left-0 z-50
         transition-all duration-500 ease-in-out
         border-b border-transparent"
>
  <div
    class="flex flex-wrap items-center justify-between sm:px-10 gap-4 w-full max-w-7xl mx-auto"
  >
    <Image
      src={section.image ?? "http://localhost/pagina"}
      alt="Cechriza Logo"
      width="136"
      height="40"
      id="cechriza-logo"
      class="h-12 w-auto object-cover max-sm:ml-auto"
    />

    <div
      id="collapseMenu"
      class="max-lg:hidden lg:block! max-lg:before:fixed max-lg:before:bg-black max-lg:before:opacity-50 max-lg:before:inset-0 max-lg:before:z-50"
    >
      <button
        id="toggleClose"
        class="lg:hidden fixed top-2 right-4 z-100 rounded-full bg-primary w-9 h-9 flex items-center justify-center border border-gray-800 text-white cursor-pointer"
      >
        <!-- <X class="size-4 fill-white" /> -->
        <Icon name="lucide:x" />
      </button>

      <ul
        class="lg:flex lg:gap-x-10 max-lg:space-y-3 text-white max-lg:fixed max-lg:bg-primary max-sm:w-full max-lg:min-w-[300px] max-lg:top-0 max-lg:left-0 max-lg:p-6 max-lg:h-full max-lg:shadow-md max-lg:overflow-auto z-50"
      >
        <li class="mb-6 hidden max-lg:block">
          <Image
            src={section.image ?? "http://localhost/pagina"}
            alt="Cechriza Logo"
            width="136"
            height="40"
            class="h-12 w-auto object-cover"
          />
        </li>

        {
          section.menus &&
            buildMenuTree(section.menus).map((menu) => (
              <>
                {!menu.children?.length && (
                  <Link title={menu.title} url={menu.link?.page?.slug ?? "#"} />
                )}

                {(menu.children?.length ?? 0) > 0 && (
                  <LinkDropdown menu={menu} />
                )}
              </>
            ))
        }
      </ul>
    </div>

    <button id="toggleOpen" class="lg:hidden cursor-pointer ml-auto text-white">
      <!-- <Menu class="size-7" /> -->
      <Icon name="lucide:menu" size="28" />
    </button>
  </div>
</nav>

<script>
  const toggleOpen = document.getElementById("toggleOpen");
  const toggleClose = document.getElementById("toggleClose");
  const collapseMenu = document.getElementById("collapseMenu") as HTMLElement;

  function handleClick() {
    const logo = document.getElementById("cechriza-logo");
    if (collapseMenu?.style.display === "block") {
      logo!.style.display = "block";
      collapseMenu.style.display = "none";
    } else {
      logo!.style.display = "none";
      collapseMenu.style.display = "block";
    }
  }

  toggleOpen?.addEventListener("click", handleClick);
  toggleClose?.addEventListener("click", handleClick);

  window.addEventListener("resize", function () {
    const logo = document.getElementById("cechriza-logo");
    if (window.innerWidth >= 1024) {
      logo!.style.display = "block";
    }
  });

  window.addEventListener("scroll", function () {
    const nav = document.querySelector("nav");

    if (window.scrollY > 0) {
      nav?.classList.add("shadow-md", "fixed", "top-0", "border-gray-800");
    } else {
      nav?.classList.remove("shadow-md", "fixed", "top-0", "border-gray-800");
    }
  });
</script>
