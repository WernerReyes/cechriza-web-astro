---
import Layout from "../layouts/Layout.astro";
import { SectionType } from "../interfaces/section.interface";
import { getPageBySlug } from "../services/page.service";

const page = await getPageBySlug(Astro.params.slug!);

if (page && Astro.params.slug !== page?.slug) {
  return Astro.redirect(`/${page.slug}`);
}

// Carga dinámica de todas las secciones disponibles en src/sections
const sectionModules = import.meta.glob("../sections/**/*.astro");

const getSectionComponent = async (type: string) => {
  // Creamos un mapa de tipos a archivos (puedes personalizarlo)
  const map: Record<string, string> = {
    [SectionType.CONTACT_TOP_BAR]: "../sections/ContactTopBar.astro",
    [SectionType.MAIN_NAVIGATION_MENU]: "../sections/MainNavigationMenu/MainNavigationMenu.astro",
    [SectionType.HERO]: "../sections/Hero.astro",
    [SectionType.WHY_US]: "../sections/WhyUs.astro",
    [SectionType.CASH_PROCESSING_EQUIPMENT]: "../sections/CashProcessingEquipment.astro",
    [SectionType.VALUE_PROPOSITION]: "../sections/ValueProposition.astro",
    [SectionType.CLIENT]: "../sections/Clients.astro",
    [SectionType.CONTACT_US]: "../sections/ContactUs.astro",
    [SectionType.FOOTER]: "../sections/Footer.astro",
  };

  const path = map[type];
  if (!path || !sectionModules[path]) return null;

  const mod = await sectionModules[path]();
  return (mod as any).default;
};
---

{
  page == null ? (
    <Layout title="Mantenimiento">
      <h1>Estamos en mantenimiento. Por favor, vuelve más tarde.</h1>
    </Layout>
  ) : (
    <Layout title={page.title}>
      {page.sections?.length ? (
        await Promise.all(
          page.sections.map(async (section) => {
            const Section = await getSectionComponent(section.type);
            return Section ? <Section section={section} /> : null;
          })
        )
      ) : (
        <h1>Estamos construyendo esta página. Vuelve pronto.</h1>
      )}
    </Layout>
  )
}
