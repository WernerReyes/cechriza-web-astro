---
interface Props {
  title: string;
  description?: string;
}

const { title, description = "Descripción genérica" } = Astro.props;

import "../styles/global.css";
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- SEO básico -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:image" content="/images/preview.jpg" />

    <link rel="icon" href="/favicon.svg" />
  </head>
  <body>
    <main class="fondo_paralelo">
      <slot />
    </main>
  </body>
</html>

<style>
  .fondo_paralelo {
    position: relative;
    overflow: hidden;
    background-color: white;
    z-index: 0; /* ← cambiamos -10 por 0 */
  }

  /* Primera franja */
  .fondo_paralelo::before,
.fondo_paralelo::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
 
  transform: skew(20deg);
  pointer-events: none;
  z-index: -1;
}


  /* Colores y animaciones */
  .fondo_paralelo::before {
    background-color: #f9fafb;
    animation: expandFirst 22s ease-in-out infinite;
  }

  .fondo_paralelo::after {
    background-color: #f3f4f6;
    animation: expandSecond 22s ease-in-out infinite;
    animation-delay: 0.1s;
  }

  .fondo_paralelo > * {
    position: relative;
    z-index: 1; /* contenido por encima */
  }

  /* Animación de crecimiento y retroceso */
  @keyframes expandFirst {
    0% {
      width: 0%;
    }
    30% {
      width: 100%;
    }
    100% {
      width: 0%;
    }
  }

  @keyframes expandSecond {
    0% {
      width: 0%;
    }
    30% {
      width: 100%;
    }
    100% {
      width: 0%;
    }
  }

  @keyframes bounce {
    0%,
    20%,
    53%,
    80%,
    100% {
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      transform: translate3d(0, 0, 0);
    }
    40%,
    43% {
      transition-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      transform: translate3d(0, -30px, 0);
    }
    70% {
      transition-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      transform: translate3d(0, -15px, 0);
    }
    90% {
      transform: translate3d(0, -4px, 0);
    }
  }
</style>


<script>

   const links = document.querySelectorAll("nav a, footer a");
  const activeLink = window.location.pathname.split("/").pop();

  for (const link of links) {
    if (link.getAttribute("href") === activeLink) {
      console.log("link activo:", link);
      link.classList.add("!text-tertiary");
    }
  }

</script>